syntax = "proto3";
package heisenberg.interchange.ibcdex;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "ibcdex/sell_order_book.proto";

option go_package = "github.com/heis-en-berg/interchange/x/ibcdex/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2

	// Queries a sellOrderBook by index.
	rpc SellOrderBook(QueryGetSellOrderBookRequest) returns (QueryGetSellOrderBookResponse) {
		option (google.api.http).get = "/heis-en-berg/interchange/ibcdex/sellOrderBook/{index}";
	}

	// Queries a list of sellOrderBook items.
	rpc SellOrderBookAll(QueryAllSellOrderBookRequest) returns (QueryAllSellOrderBookResponse) {
		option (google.api.http).get = "/heis-en-berg/interchange/ibcdex/sellOrderBook";
	}

}

// this line is used by starport scaffolding # 3
message QueryGetSellOrderBookRequest {
	string index = 1;
}

message QueryGetSellOrderBookResponse {
	SellOrderBook SellOrderBook = 1;
}

message QueryAllSellOrderBookRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSellOrderBookResponse {
	repeated SellOrderBook SellOrderBook = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
